---
import MovieList from "../../../../../../components/MovieList/MovieList.astro";
import Error from "../../../../../../components/Error/Error.astro";
import { buttonClasses } from "../../../../../../components/style/twClasses/buttonClasses";
import { getTypedFilter } from "../../../../../../helper/getTypedFilter";

export const partial = true;

const params = Astro.url.pathname.split('/');
const userId = params[4];
const movieId = params[5];

const watchedStateParam = Astro.url.searchParams.get('watched');
const filter = getTypedFilter(Astro.url.searchParams.get('filter'));

let isError = false;

const toggleResponse = await fetch (`${import.meta.env.HOST_URL}/api/user/toggle/${userId}/${movieId}/?watched=${watchedStateParam}`);
const movie = await toggleResponse.json();

if (movie.error) {
  console.error(movie.error);
  isError = true;
}

const allMoviesResponse = await fetch (`${import.meta.env.HOST_URL}/api/user/movies/${userId}?filter=${filter}`);
const allMoviesData = await allMoviesResponse.json();

if (allMoviesData.error) {
  isError = true;
}

const movies = !allMoviesData.error ? allMoviesData as Movie[] : [] as Movie[];

---
{
  isError
  ?
    <Error />
  :
    <MovieList movies={movies} filter={filter}/>
}
